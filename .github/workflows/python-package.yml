# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Unit test

on:
  push:
  pull_request:

jobs:
  ut:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Github action runner update ubuntu to 22.04, which does not have
        # python-3.6 in it: https://github.com/actions/setup-python/issues/544#issuecomment-1320295576
        # To fix it: use os: [ubuntu-20.04] instead
        os: [ubuntu-latest]
        python-version: [3.9, "3.10", 3.11, 3.12]

    steps:
    - uses: actions/checkout@v5
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f test-requirements.txt ]; then pip install -r test-requirements.txt; fi
    - name: Install npm dependencies
      run: |
        if [ -f package.json ]; then npm install; fi

        # manually add module binary path to github ci
        echo "add node module path: $GITHUB_WORKSPACE/node_modules/.bin/"
        echo "$GITHUB_WORKSPACE/node_modules/.bin/" >> $GITHUB_PATH

    - name: Install apt dependencies
      run: |
        if [ -f packages.txt ]; then cat packages.txt | xargs sudo apt-get install; fi
    - name: Test with pytest
      env:
        # interactive command such as k3handy.cmdtty to run git, git complains
        # if no TERM set:
        #   out: - (press RETURN)
        #   err: WARNING: terminal is not fully functional
        # And waiting for a RETURN to press for ever
        TERM: xterm
      run: |
        cp setup.py ..
        cd ..
        python setup.py install
        cd -

        if [ -f sudo_test ]; then
          sudo env "PATH=$PATH" pytest -v
        else
          pytest -v
        fi

    - uses: actions/upload-artifact@v4
      if: failure()
      with:
        path: test/

  build_doc:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.9, "3.10", 3.11, 3.12]

    steps:
    - uses: actions/checkout@v5
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f test-requirements.txt ]; then pip install -r test-requirements.txt; fi

    - name: Test building doc
      run: |
        pip install -r _building/building-requirements.txt
        make -C docs html

  lint:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.9, "3.10", 3.11, 3.12]

    steps:
    - uses: actions/checkout@v5

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f test-requirements.txt ]; then pip install -r test-requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
